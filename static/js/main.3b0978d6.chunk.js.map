{"version":3,"sources":["GlobalStyle.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/HeroImage.jsx","components/Grid/Grid.styles.js","components/Grid/Grid.jsx","components/Thumb/Thumb.styles.js","components/Thumb/Thumb.jsx","components/Spinner/Spinner.jsx","components/Spinner/Spinner.styles.js","components/SearchBar/SearchBar.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.jsx","components/Button/Button.styles.js","components/Button/Button.jsx","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Pages/Home.jsx","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","context.js","components/Header/Header.jsx","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/BreadCrumb.jsx","components/MovieInfo/MovieInfo.styles.js","components/Rate/Rate.jsx","components/MovieInfo/MovieInfo.jsx","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/MovieInfoBar.jsx","components/Actor/Actor.styles.js","components/Actor/Actor.jsx","components/Pages/Movie.jsx","hooks/useMovieFetch.js","components/Pages/NotFound.jsx","components/Pages/Login.styles.js","components/Pages/Login.jsx","components/ActorInfo/ActorInfo.styles.js","components/ActorInfo/ActorInfo.jsx","components/ActorInfoBar/ActorInfoBar.styles.js","components/ActorInfoBar/ActorInfoBar.jsx","components/Pages/ActorPage.jsx","hooks/useActorFetch.js","components/ProfileInfo/ProfileInfo.styles.js","components/ProfileInfo/ProfileInfo.jsx","components/Pages/Profile.jsx","hooks/useProfileFetch.js","hooks/useMovieRatingFetch.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","Wrapper","styled","div","props","image","Content","Text","HeroImage","title","text","Grid","header","children","Image","img","Thumb","movieId","clickable","to","src","alt","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getFilmsFromActor","personId","filmsFromActor","getDetailsAboutActor","detailsAboutActor","getLinksOnActor","actorLinks","getAccountId","sessionId","accountId","getRateOfMovies","rateMovies","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","initialState","results","total_page","total_results","useHomeFetch","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","sessionState","stateName","localStorage","getItem","parse","isPersistedState","console","log","setItem","Home","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","total_pages","LogoImg","TMDBLogoImg","Context","React","createContext","UserProvider","undefined","Provider","Header","useContext","user","setExit","useNavigate","RMDBLogo","alert","TMDBLogo","BreadCrumb","movieTitle","actorName","textDecoration","backdrop","Rate","setValue","min","max","e","MovieInfo","handleRating","rate","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","actorId","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","Login","userName","setUserName","setPassword","setUser","navigate","handleSumbit","session_id","handleInput","color","href","target","ActorInfo","birthday","place_of_birth","biography","ActorInfoBar","links","imdb_id","instagram_id","twitter_id","facebook_id","ActorPage","fetchActor","actorMovies","useActorFetch","ProfileInfo","profileInfo","lengthRate","averageRating","tmdb","avatar_path","Profile","fetchProfile","accountInfo","useAccountIdFetch","fetchRating","movieRatingsInfo","useMovieRatingFetch","ratingProfile","avatar","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b0978d6.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --maxWidth: 1280px;\r\n    --white: #fff;\r\n    --lightGrey: #eee;\r\n    --medGrey: #353535;\r\n    --darkGrey: #1c1c1c;\r\n    --fontSuperBig: 2.5rem;\r\n    --fontBig: 1.5rem;\r\n    --fontMed: 1.2rem;\r\n    --fontSmall: 1rem\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Abel', sans-serif;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    h1 {\r\n      font-size: 2rem;\r\n      font-weight: 600;\r\n      color: var(--white)\r\n    }\r\n\r\n    h3 {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n    }\r\n\r\n    p {\r\n      font-size: 1rem;\r\n      color: var(--white)\r\n    }\r\n  }\r\n`","// Configuration for TMDB API\r\n// Read more about the API here: https://developers.themoviedb.org/\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\r\n// For login and voting\r\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\r\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\r\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\r\n\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w780';\r\nconst ACTOR_SIZE = 'w500';\r\nconst PROFILE_SIZE = 'w300';\r\n\r\nexport {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n  ACTOR_SIZE,\r\n  PROFILE_SIZE\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${(props) =>\r\n          `linear-gradient(\r\n      to bottom, rgba(0,0,0,0)\r\n      39%,rgba(0,0,0,0)\r\n      41%,rgba(0,0,0,0.65)\r\n      100%\r\n    ),\r\n    url('${props.image}'), var(--darkGrey)`};\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroimage 1s;\r\n  @keyframes animateHeroimage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n  p {\r\n    font-size: var(--fontMed);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport {Wrapper, Content, Text} from \"./HeroImage.styles\";\r\n\r\nconst HeroImage = ({image, title, text}) => {\r\n    return (\r\n        <Wrapper image={image}>\r\n            <Content>\r\n                <Text>\r\n                    <h1>{title}</h1>\r\n                    <p>{text}</p>\r\n                </Text>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nHeroImage.propTypes = {\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string\r\n}\r\n\r\nexport default HeroImage;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  \r\n  h1{\r\n    color: var(--medGrey);\r\n    \r\n    @media screen and (max-width: 768px){\r\n      font-size: var(--fontBig)\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2rem;\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport {Wrapper, Content} from \"./Grid.styles\";\r\n\r\nconst Grid = ({header, children}) => {\r\n    return (\r\n        <Wrapper>\r\n            <h1>{header}</h1>\r\n            <Content>{children}</Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nGrid.propTypes = {\r\n    header: PropTypes.string\r\n}\r\n\r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transition: all 0.3s;\r\n  object-fit: cover;\r\n  border-radius: 20px;\r\n  \r\n  animation: animateThumb 0.5s;\r\n  \r\n  :hover{\r\n    opacity: 0.8;\r\n  }\r\n  \r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport {Image} from './Thumb.styles'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Thumb = ({image, movieId, clickable}) => {\r\n    return (\r\n        <div>\r\n            {clickable ? (\r\n                    <Link to={`/${movieId}`}>\r\n                        <Image src={image} alt='movie-thumb'/>\r\n                    </Link>\r\n                )\r\n                : (\r\n                    <Image src={image} alt='movie-thumb'/>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    clickable: PropTypes.bool\r\n}\r\n\r\nexport default Thumb;","// Styles\r\nimport {Spinner} from './Spinner.styles'\r\n\r\nexport default Spinner\r\n","import styled from 'styled-components';\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGrey);\r\n  border-top: 5px solid var(--madGrey);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n  \r\n  @keyframes spin {\r\n    0%{\r\n      transform: rotate(0deg);\r\n    }\r\n    100%{\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 120px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  height: 55px;\r\n  background: var(--medGrey);\r\n  margin: 0 auto;\r\n  border-radius: 40px;\r\n  color: var(--white);\r\n  \r\n  img{\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 14px;\r\n    width: 30px;\r\n  }\r\n  \r\n  input{\r\n    font-size: var(--fontBig);\r\n    position: absolute;\r\n    left: 0;\r\n    margin: 8px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n    \r\n    :focus{\r\n      outline: none\r\n    }\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/search-icon.bb4c697f.svg\";","import React, {useState, useEffect, useRef} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport {Wrapper, Content} from \"./SearchBar.styles\";\r\n\r\n// Image\r\nimport searchIcon from '../../images/search-icon.svg'\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n\r\n    const [state, setState] = useState('')\r\n    const initial = useRef(true)\r\n\r\n    useEffect(() => {\r\n\r\n        if(initial.current){\r\n            initial.current = false\r\n            return;\r\n        }\r\n\r\n        const timer = setTimeout(() => {\r\n            setSearchTerm(state);\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timer)\r\n\r\n    }, [setSearchTerm, state])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon' />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Search movie'\r\n                    onChange={event => setState(event.currentTarget.value)}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n    setSearchTerm: PropTypes.func\r\n}\r\n\r\nexport default SearchBar;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  background: var(--darkGrey);\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  color: var(--white);\r\n  border: 0;\r\n  font-size: var(--fontBig);\r\n  margin: 20px auto;\r\n  transition: all 0.3s;\r\n  outline: none;\r\n  cursor: pointer;\r\n  \r\n  :hover{\r\n    opacity: 0.8;\r\n  }\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport {Wrapper} from \"./Button.styles\";\r\n\r\nconst Button = ({text, callback}) => {\r\n    return (\r\n        <Wrapper\r\n            type='button'\r\n            onClick={callback}>\r\n            {text}</Wrapper>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    callback: PropTypes.func\r\n}\r\n\r\nexport default Button;","import {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL\r\n} from './config';\r\n\r\nconst defaultConfig = {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst apiSettings = {\r\n  fetchMovies: async (searchTerm, page) => {\r\n    const endpoint = searchTerm\r\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\r\n      : `${POPULAR_BASE_URL}&page=${page}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovie: async movieId => {\r\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchCredits: async movieId => {\r\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    return await (await fetch(creditsEndpoint)).json();\r\n  },\r\n\r\n\r\n  // Get films from actor name\r\n  getFilmsFromActor: async personId => {\r\n    const filmsFromActor = `${API_URL}person/${personId}/movie_credits?api_key=${API_KEY}`\r\n    return await (await fetch(filmsFromActor)).json()\r\n  },\r\n  getDetailsAboutActor: async personId => {\r\n    const detailsAboutActor = `${API_URL}person/${personId}?api_key=${API_KEY}`\r\n    return await (await fetch(detailsAboutActor)).json();\r\n  },\r\n  getLinksOnActor: async personId => {\r\n    const actorLinks = `${API_URL}person/${personId}/external_ids?api_key=${API_KEY}`\r\n    return await (await fetch(actorLinks)).json()\r\n  },\r\n\r\n  // Get movies from account\r\n  getAccountId: async (sessionId) => {\r\n    const accountId = `${API_URL}account?api_key=${API_KEY}&session_id=${sessionId}`\r\n    return await (await fetch(accountId)).json()\r\n  },\r\n  getRateOfMovies: async (accountId, sessionId) => {\r\n    const rateMovies = `${API_URL}account/${accountId}/rated/movies?api_key=${API_KEY}&language=en-US&session_id=${sessionId}&sort_by=created_at.asc&page=1`\r\n    return await (await fetch(rateMovies)).json()\r\n  },\r\n\r\n\r\n  // Bonus material below for login\r\n  getRequestToken: async () => {\r\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\r\n    return reqToken.request_token;\r\n  },\r\n  authenticate: async (requestToken, username, password) => {\r\n    const bodyData = {\r\n      username,\r\n      password,\r\n      request_token: requestToken\r\n    };\r\n    // First authenticate the requestToken\r\n    const data = await (\r\n      await fetch(LOGIN_URL, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify(bodyData)\r\n      })\r\n    ).json();\r\n    // Then get the sessionId with the requestToken\r\n    if (data.success) {\r\n      const sessionId = await (\r\n        await fetch(SESSION_ID_URL, {\r\n          ...defaultConfig,\r\n          body: JSON.stringify({ request_token: requestToken })\r\n        })\r\n      ).json();\r\n      return sessionId;\r\n    }\r\n  },\r\n  rateMovie: async (sessionId, movieId, value) => {\r\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\r\n\r\n    const rating = await (\r\n      await fetch(endpoint, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify({ value })\r\n      })\r\n    ).json();\r\n\r\n    return rating;\r\n  }\r\n};\r\n\r\nexport default apiSettings;\r\n","// Convert time to hours and minutes\r\nexport const calcTime = time => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n// Convert a number to money formatting\r\nexport const convertMoney = money => {\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n};\r\n// Locale storage\r\nexport const isPersistedState = stateName => {\r\n  const sessionState = localStorage.getItem(stateName)\r\n  return sessionState && JSON.parse(sessionState)\r\n};\r\n// Average rating in account\r\n// export const averageRating = filmsArray => {\r\n//   let average = 0;\r\n//   filmsArray.map(film => {\r\n//     average += film.rating\r\n//   })\r\n//   return average / filmsArray.length\r\n// }","import {useEffect, useState, useRef} from 'react'\r\nimport API from \"../API\";\r\n// Helpers\r\nimport {isPersistedState} from \"../helpers\";\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_page: 0,\r\n    total_results: 0\r\n}\r\n\r\nexport const useHomeFetch = () => {\r\n\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [state, setState] = useState(initialState)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false)\r\n\r\n    const fetchMovies = async (page, searchTerm = '') => {\r\n        try{\r\n            setError(false)\r\n            setLoading(true)\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page)\r\n\r\n            setState(prev => ({\r\n                ...movies,\r\n                results:\r\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }))\r\n        } catch (error){\r\n            setError(true)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    // Initial and search\r\n    useEffect(() => {\r\n\r\n        if(!searchTerm) {\r\n            const sessionState = isPersistedState('homeState')\r\n\r\n            if (sessionState) {\r\n                console.log('grabbing from local storage')\r\n                setState(sessionState)\r\n                return;\r\n            }\r\n        }\r\n\r\n        setState(initialState)\r\n        fetchMovies(1, searchTerm)\r\n        console.log('grabbing from api')\r\n    }, [searchTerm])\r\n\r\n    // Load more\r\n    useEffect(() => {\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page + 1, searchTerm);\r\n        setIsLoadingMore(false)\r\n\r\n    }, [isLoadingMore, searchTerm, state.page])\r\n\r\n    // Write to sessionStorage\r\n    useEffect(() => {\r\n        if (!searchTerm) localStorage.setItem('homeState', JSON.stringify(state))\r\n    }, [searchTerm, state])\r\n\r\n    return { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore }\r\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\r\n\r\n// Config\r\nimport {POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL} from \"../../config\";\r\n\r\n// Components\r\nimport HeroImage from \"../HeroImage/HeroImage\";\r\nimport Grid from '../Grid/Grid';\r\nimport Thumb from \"../Thumb/Thumb\";\r\nimport Spinner from '../Spinner/Spinner'\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport Button from '../Button/Button'\r\n\r\n// Hook\r\nimport {useHomeFetch} from '../../hooks/useHomeFetch'\r\n\r\n// Image\r\nimport NoImage from '../../images/no_image.jpg'\r\n\r\nconst Home = () => {\r\n\r\n    const {state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore } = useHomeFetch()\r\n\r\n    if(error){\r\n        return (\r\n            <div>Something went wrong ...</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!searchTerm && state.results[0]\r\n                ? <HeroImage\r\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n                    title={state.results[0].original_title}\r\n                    text={state.results[0].overview}\r\n                />\r\n                : null\r\n            }\r\n            <SearchBar setSearchTerm={setSearchTerm}/>\r\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n                {state.results.map(movie => {\r\n                    return (\r\n                        <Thumb key={movie.id}\r\n                               clickable={true}\r\n                               image={\r\n                                   movie.poster_path\r\n                                       ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                                       : NoImage\r\n                               }\r\n                               movieId={movie.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </Grid>\r\n            {loading ? <Spinner /> : null}\r\n            {state.page < state.total_pages && !loading && (\r\n                <Button text='Load more'\r\n                        callback={() => setIsLoadingMore(true)} />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/react-movie-logo.35f4d399.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.e7029961.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  max-width: var(--maxWidth);\r\n  padding: 20px 0;\r\n  margin: 0 auto;\r\n  \r\n  color: var(--white);\r\n  \r\n  a {\r\n    color: var(--white);\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  width: 200px;\r\n  @media screen and (max-width: 500px) {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n  width: 100px;\r\n  @media screen and (max-width: 500px) {\r\n    width: 80px;\r\n  }\r\n`;","import React, {useState, createContext} from 'react';\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst UserProvider = ( {children} ) => {\r\n    const [state, setState] = useState(undefined)\r\n\r\n    return (\r\n        <Context.Provider value={ [state, setState] }>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider;","import React, {useContext} from 'react';\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\nimport {Wrapper, Content, LogoImg, TMDBLogoImg} from \"./Header.styles\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n// Context\r\nimport {Context} from \"../../context\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const [user] = useContext(Context);\r\n    const [exit, setExit] = useContext(Context)\r\n    const navigate = useNavigate()\r\n\r\n    const exitFromAccount = () => {\r\n        setExit(undefined)\r\n        alert('exit from account')\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <Link to='/'>\r\n                    <LogoImg src={RMDBLogo} alt='rmdb-logo' />\r\n                </Link>\r\n\r\n                {user ? (\r\n                    <>\r\n                        <Link to='/profile'>Profile</Link>\r\n                        <span>Logged in as: {user.username}</span>\r\n                        <Link to='/' onClick={exitFromAccount}>Exit</Link>\r\n                    </>\r\n                ) : (\r\n                    <Link to='/login'>\r\n                        <span>Login</span>\r\n                    </Link>\r\n                )\r\n                }\r\n\r\n                <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo'/>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 70px;\r\n  background: var(--medGrey);\r\n  color: var(--white)\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: var(--maxWidth);\r\n  padding: 0 20px;\r\n  span{\r\n    font-size: var(--fontMed);\r\n    color: var(--white);\r\n    padding-right: 10px;\r\n    \r\n    @media screen and (max-width: 768px){\r\n      font-size: var(--fontSmall)\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport {Wrapper, Content} from './BreadCrumb.styles'\r\n\r\nconst BreadCrumb = ({ movieTitle, actorName }) => {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <Link to='/' style={{textDecoration: 'none'}}>\r\n                    <span>Home</span>\r\n                </Link>\r\n                <span>|</span>\r\n                <span>{ movieTitle || actorName}</span>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nBreadCrumb.propTypes = {\r\n    movieTitle: PropTypes.string\r\n}\r\n\r\nexport default BreadCrumb;","import styled from 'styled-components'\r\nimport {IMAGE_BASE_URL, BACKDROP_SIZE} from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${(props) =>\r\n          props.backdrop\r\n                  ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\r\n                  : '#000'};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieinfo 1s;\r\n  @keyframes animateMovieinfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgb(0, 0, 0, 0.7);;\r\n  border-radius: 20px;\r\n  \r\n  @media screen and (max-width: 768px){\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 50px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n  \r\n  .rating-directors{\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n  .score{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    margin: 0;\r\n  }\r\n  .director{\r\n    margin: 0 0 0 40px;\r\n    p {\r\n      margin: 0;\r\n    }\r\n    h1{\r\n      @media screen and (max-width: 768px){\r\n        font-size: var(--fontBig);\r\n    }\r\n    }\r\n  }\r\n`;","import React, {useState} from 'react';\r\n\r\nconst Rate = ( {callback} ) => {\r\n\r\n    const [value, setValue] = useState(5)\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"range\"\r\n                min='1'\r\n                max='10'\r\n                value={value}\r\n                onChange={(e) => setValue(e.currentTarget.value)}\r\n            />\r\n            {value}\r\n            <p>\r\n                <button onClick={() => callback(value)}>Rate</button>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rate;","import React, {useContext} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport {Wrapper, Content, Text} from \"./MovieInfo.styles\";\r\n\r\n// API\r\nimport API from \"../../API\";\r\n\r\n// Components\r\nimport Thumb from \"../Thumb/Thumb\";\r\nimport Rate from '../Rate/Rate'\r\n\r\n// Config\r\nimport {IMAGE_BASE_URL, POSTER_SIZE} from \"../../config\";\r\n\r\n// Image\r\nimport NoImage from '../../images/no_image.jpg'\r\n\r\n// Context\r\nimport {Context} from \"../../context\";\r\n\r\nconst MovieInfo = ({movie}) => {\r\n\r\n    const [user] = useContext(Context)\r\n\r\n    const handleRating = async (value) => {\r\n        const rate = await API.rateMovie(user.sessionId, movie.id, value)\r\n        console.log(rate)\r\n    }\r\n\r\n    return (\r\n        <Wrapper backdrop={movie.backdrop_path}>\r\n            <Content>\r\n                <Thumb\r\n                    image={movie.poster_path\r\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                        : NoImage\r\n                    }\r\n                    clickable={false}/>\r\n                <Text>\r\n                    <h1>{movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{movie.overview}</p>\r\n\r\n                    <div className=\"rating-directors\">\r\n                        <div>\r\n                            <h3>RATING</h3>\r\n                            <div className=\"score\">{movie.vote_average}</div>\r\n                        </div>\r\n                        {movie.directors ? (\r\n                            <div className=\"director\">\r\n                                <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n                                {movie.directors.map(director => {\r\n                                    return (<p key={director.credit_id}>{director.name}</p>)\r\n                                })}\r\n                            </div>\r\n                        ) : null\r\n                        }\r\n                    </div>\r\n                    {user && (\r\n                        <div>\r\n                            <p>Rate movie</p>\r\n                            <Rate callback={handleRating}/>\r\n                        </div>\r\n                    )}\r\n                </Text>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nMovieInfo.propTypes = {\r\n    movie: PropTypes.object\r\n}\r\n\r\nexport default MovieInfo;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  \r\n  .column{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n    flex: 1;\r\n    \r\n    :first-child{\r\n      margin-left: 0\r\n    }\r\n    :last-child{\r\n      margin-right: 0;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px){\r\n    display: block;\r\n    \r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\r\n\r\n// Helpers\r\nimport {calcTime, convertMoney} from \"../../helpers\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <div className=\"column\">\r\n                    <p>Running time: {calcTime(time)}</p>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <p>Budget: {convertMoney(budget)}</p>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <p>Revenue: {convertMoney(revenue)}</p>\r\n                </div>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nMovieInfoBar.propTypes = {\r\n    time: PropTypes.number,\r\n    budget: PropTypes.number,\r\n    revenue: PropTypes.number\r\n}\r\n\r\nexport default MovieInfoBar;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  color: var(--white);\r\n  background: var(--darkGrey);\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  h3 {\r\n    margin: 10px 0 0 0;\r\n\r\n  }\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n  a {\r\n    color: var(--white);\r\n    text-decoration: none\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 250px;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n// Styles\r\nimport {Wrapper, Image} from \"./Actor.styles\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Actor = ({name, character, imageUrl, clickable, actorId}) => {\r\n    return (\r\n        <Wrapper>\r\n            {clickable ? (\r\n                <Link to={`/actor/${actorId}`}>\r\n                    <Image src={imageUrl} alt='actor-thumb'/>\r\n                    <h3>{name}</h3>\r\n                    <p>{character}</p>\r\n                </Link>\r\n            ) : null\r\n            }\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nActor.propTypes = {\r\n    name: PropTypes.string,\r\n    character: PropTypes.string,\r\n    imageUrl: PropTypes.string\r\n}\r\n\r\nexport default Actor;","import React from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n// Config\r\nimport {IMAGE_BASE_URL, POSTER_SIZE} from \"../../config\";\r\n// Components\r\nimport BreadCrumb from \"../BreadCrumb/BreadCrumb\";\r\nimport Grid from '../Grid/Grid'\r\nimport Spinner from '../Spinner/Spinner'\r\nimport MovieInfo from \"../MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"../MovieInfoBar/MovieInfoBar\";\r\nimport Actor from \"../Actor/Actor\";\r\n\r\n// Hook\r\nimport {useMovieFetch} from \"../../hooks/useMovieFetch\";\r\n\r\n// Image\r\nimport NoImage from '../../images/no_image.jpg'\r\n\r\nconst Movie = () => {\r\n\r\n    const {movieId} = useParams()\r\n\r\n    const {state: movie, loading, error} = useMovieFetch(movieId)\r\n\r\n    if (loading) return <Spinner/>\r\n    if (error) return <div>Something went wrong...</div>\r\n    console.log(movie)\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumb movieTitle={movie.original_title}/>\r\n            <MovieInfo movie={movie}/>\r\n            <MovieInfoBar\r\n                time={movie.runtime}\r\n                budget={movie.budget}\r\n                revenue={movie.revenue}/>\r\n            <Grid header='Actors'>\r\n                {movie.actors && movie.actors.map(actor => {\r\n                    return (\r\n                        <Actor\r\n                            key={actor.credit_id}\r\n                            name={actor.name}\r\n                            character={actor.character}\r\n                            imageUrl={\r\n                                actor.profile_path\r\n                                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                                    : NoImage\r\n                            }\r\n                            clickable={true}\r\n                            actorId={actor.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movie;","import {useState, useEffect} from \"react\";\r\nimport API from '../API'\r\n\r\n// Helpers\r\nimport {isPersistedState} from \"../helpers\";\r\n\r\nexport const useMovieFetch = movieId => {\r\n\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchMovie = async () => {\r\n            try {\r\n\r\n                setLoading(true)\r\n                setError(false)\r\n\r\n                const movie = await API.fetchMovie(movieId)\r\n                const credits = await API.fetchCredits(movieId)\r\n\r\n                // Get directors only\r\n                const directors = credits.crew.filter(member => member.job === 'Director')\r\n\r\n                setState({\r\n                    ...movie,\r\n                    actors: credits.cast,\r\n                    directors: directors\r\n                })\r\n\r\n                setLoading(false)\r\n\r\n            } catch (error) {\r\n                setError(true)\r\n            }\r\n        }\r\n        fetchMovie()\r\n    }, [movieId])\r\n\r\n    // Write to localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem(movieId, JSON.stringify(state))\r\n    }, [movieId, state])\r\n    return {state, loading, error}\r\n}","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            Not Found\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  color: var(--darkGrey);\r\n  \r\n  input {\r\n    width: 100%;\r\n    height: 30px;\r\n    border: 1px solid var(--darkGrey);\r\n    border-radius: 20px;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n  }\r\n  \r\n  .error {\r\n    color: red\r\n  }\r\n`;","import React, {useContext, useState} from 'react';\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport API from '../../API'\r\n\r\n// Components\r\nimport Button from \"../Button/Button\";\r\n\r\n// Styles\r\nimport {Wrapper} from \"./Login.styles\";\r\n\r\n// Context\r\nimport {Context} from \"../../context\";\r\n\r\nconst Login = () => {\r\n\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const [user, setUser] = useContext(Context)\r\n    const navigate = useNavigate()\r\n\r\n    const handleSumbit = async () => {\r\n        setError(false)\r\n        try {\r\n\r\n            const requestToken = await API.getRequestToken();\r\n            const sessionId = await API.authenticate(\r\n                requestToken, userName, password\r\n            )\r\n            setUser({ sessionId: sessionId.session_id, username: userName })\r\n\r\n            navigate('/');\r\n\r\n        } catch (error) {\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.currentTarget.name;\r\n        const value = event.currentTarget.value;\r\n\r\n        if(name === 'userName') setUserName(value)\r\n        if(name === 'password') setPassword(value)\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            {error && <div className='error'>Incorrect login or password</div>}\r\n            <label>Username:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={userName}\r\n                name='userName'\r\n                onChange={handleInput}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                name='password'\r\n                onChange={handleInput}\r\n            />\r\n            <Button text='Login' callback={handleSumbit} />\r\n            <a style={{textDecoration: 'none', color: 'black'}} href='https://www.themoviedb.org/signup' target='_blank'>Немає\r\n                аккаунта?</a>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Login;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieinfo 1s;\r\n  @keyframes animateMovieinfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgb(0, 0, 0, 0.7);;\r\n  border-radius: 20px;\r\n  \r\n  @media screen and (max-width: 768px){\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 50px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n`;","import React from 'react';\r\nimport {Content, Text, Wrapper} from \"./ActorInfo.styles\";\r\nimport Thumb from \"../Thumb/Thumb\";\r\nimport {ACTOR_SIZE, IMAGE_BASE_URL, POSTER_SIZE} from \"../../config\";\r\nimport NoImage from \"../../images/no_image.jpg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst ActorInfo = ({actor}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <Thumb\r\n                    image={actor.profile_path\r\n                        ? `${IMAGE_BASE_URL}${ACTOR_SIZE}${actor.profile_path}`\r\n                        : NoImage\r\n                    }\r\n                    clickable={false}/>\r\n                <Text>\r\n                    <h1>{actor.name}</h1>\r\n                    <h3>Birthday: {actor.birthday}</h3>\r\n                    <h3>Place of birth: {actor.place_of_birth}</h3>\r\n                    <h3>Biography:</h3>\r\n                    <p>{actor.biography}</p>\r\n                </Text>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nActorInfo.propTypes = {\r\n    actor: PropTypes.object\r\n}\r\n\r\nexport default ActorInfo;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  \r\n  .column{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n    flex: 1;\r\n    \r\n    a{\r\n      color: var(--white);\r\n      text-decoration: none;\r\n      font-size: var(--fontSmall)\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px){\r\n    display: block;\r\n\r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport {Content, Wrapper} from \"./ActorInfoBar.styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ActorInfoBar = ({links}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                {links.imdb_id &&\r\n                <div className=\"column\">\r\n                    <p><a href={`https://www.imdb.com/name/${links.imdb_id}`} target='_blank'>IMDB profile</a></p>\r\n                </div>\r\n                }\r\n                {links.instagram_id &&\r\n                <div className=\"column\">\r\n                    <p><a href={`https://www.instagram.com/${links.instagram_id}`} target='_blank'>Instagram profile</a>\r\n                    </p>\r\n                </div>\r\n                }\r\n                {links.twitter_id &&\r\n                <div className=\"column\">\r\n                    <p><a href={`https://twitter.com/${links.twitter_id}`} target='_blank'>Twitter profile</a></p>\r\n                </div>\r\n                }\r\n                {links.facebook_id &&\r\n                <div className=\"column\">\r\n                    <p><a href={`https://facebook.com/${links.twitter_id}`} target='_blank'>Facebook profile</a></p>\r\n                </div>\r\n                }\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nActorInfoBar.propTypes = {\r\n    links: PropTypes.object\r\n}\r\n\r\nexport default ActorInfoBar;","import React from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useActorFetch} from \"../../hooks/useActorFetch\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Grid from \"../Grid/Grid\";\r\nimport Thumb from \"../Thumb/Thumb\";\r\nimport {IMAGE_BASE_URL, POSTER_SIZE} from \"../../config\";\r\nimport NoImage from '../../images/no_image.jpg'\r\nimport BreadCrumb from \"../BreadCrumb/BreadCrumb\";\r\nimport ActorInfo from \"../ActorInfo/ActorInfo\";\r\nimport ActorInfoBar from \"../ActorInfoBar/ActorInfoBar\";\r\n\r\nconst ActorPage = () => {\r\n\r\n    const {actorId} = useParams()\r\n\r\n    const {state: actor, loading, error} = useActorFetch(actorId)\r\n\r\n    if (loading) return <Spinner/>\r\n    if (error) return <div>Something went wrong...</div>\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumb actorName={actor.name}/>\r\n            <ActorInfo actor={actor}/>\r\n            <ActorInfoBar links={actor.links}/>\r\n            <Grid header={actor.name ? `Movies with ${actor.name}` : null}>\r\n                {actor.cast.map(movie => {\r\n                    return (\r\n                        <Thumb\r\n                            key={movie.id}\r\n                            clickable={true}\r\n                            image={movie.poster_path\r\n                                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                                : NoImage\r\n                            }\r\n                            movieId={movie.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActorPage;","import {useState, useEffect} from \"react\";\r\nimport API from \"../API\";\r\n\r\nexport const useActorFetch = actorId => {\r\n\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchActor = async () => {\r\n            try {\r\n                setLoading(true)\r\n                setError(false)\r\n\r\n                const actorMovies = await API.getFilmsFromActor(actorId)\r\n                const detailsAboutActor = await API.getDetailsAboutActor(actorId)\r\n                const actorLinks = await API.getLinksOnActor(actorId)\r\n\r\n                setState({\r\n                    ...detailsAboutActor,\r\n                    ...actorMovies,\r\n                    links: {...actorLinks}\r\n                })\r\n\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setError(true)\r\n            }\r\n        }\r\n\r\n        // const sessionState = isPersistedState(actorId)\r\n        //\r\n        // if (sessionState) {\r\n        //     setState(sessionState)\r\n        //     setLoading(false)\r\n        //     return;\r\n        // }\r\n\r\n        fetchActor()\r\n\r\n    }, [actorId])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(actorId, JSON.stringify(state))\r\n    }, [actorId, state])\r\n    return {state, loading, error}\r\n}","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieinfo 1s;\r\n  @keyframes animateMovieinfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgb(0, 0, 0, 0.7);;\r\n  border-radius: 20px;\r\n  \r\n  @media screen and (max-width: 768px){\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 50px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n`;","import React from 'react';\r\nimport {Wrapper, Content, Text} from \"./ProfileInfo.styles\";\r\nimport {IMAGE_BASE_URL, PROFILE_SIZE} from \"../../config\";\r\nimport Thumb from \"../Thumb/Thumb\";\r\nimport NoImage from \"../../images/no_image.jpg\";\r\n\r\nconst ProfileInfo = ({profileInfo, lengthRate, name, averageRating}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                {profileInfo\r\n                    ? <>\r\n                        <Thumb\r\n                            image={profileInfo.tmdb.avatar_path\r\n                                ? `${IMAGE_BASE_URL}${PROFILE_SIZE}${profileInfo.tmdb.avatar_path}`\r\n                                : NoImage\r\n                            }\r\n                            clickable={false}/>\r\n                        <Text>\r\n                            <h1>Профіль: {name}</h1>\r\n                            <h3>Всього оцінок: {lengthRate}</h3>\r\n                            <h4>Середня оцінка фільму: {averageRating}</h4>\r\n                        </Text>\r\n                        </>\r\n                    : null\r\n                }\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React, {useContext, useEffect} from 'react';\r\nimport {Context} from \"../../context\";\r\nimport {useAccountIdFetch, useProfileFetch} from \"../../hooks/useProfileFetch\";\r\nimport {useMovieRatingFetch} from \"../../hooks/useMovieRatingFetch\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport BreadCrumb from \"../BreadCrumb/BreadCrumb\";\r\nimport ProfileInfo from \"../ProfileInfo/ProfileInfo\";\r\nimport {averageRating} from \"../../helpers\";\r\n\r\nconst Profile = () => {\r\n\r\n    const [user] = useContext(Context)\r\n    console.log(user)\r\n    let sessionId;\r\n    if (user !== undefined) {\r\n        sessionId = user.sessionId\r\n    }\r\n    const {state: accountInfo} = useAccountIdFetch(sessionId)\r\n    console.log(accountInfo)\r\n    const {state: ratingProfile, error, loading} = useMovieRatingFetch(accountInfo.id, sessionId)\r\n    // const filmsArray = ratingProfile.results\r\n    // console.log(filmsArray)\r\n    //\r\n    // const average = averageRating(filmsArray)\r\n    if (loading) return <Spinner/>\r\n    if (error) return <div>Something went wrong...</div>\r\n    console.log(ratingProfile)\r\n\r\n    return (\r\n        <div>\r\n            {user && (\r\n                <>\r\n                    <BreadCrumb actorName={user.username}/>\r\n                    <ProfileInfo profileInfo={accountInfo.avatar}\r\n                                 lengthRate={ratingProfile.results.length}\r\n                                 name={user.username}\r\n                                 />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {useEffect, useState} from \"react\";\r\nimport API from \"../API\";\r\n\r\nexport const useAccountIdFetch = sessionId => {\r\n\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchProfile = async () => {\r\n            try{\r\n\r\n                setLoading(true)\r\n                setError(false)\r\n\r\n                const accountInfo = await API.getAccountId(sessionId)\r\n\r\n                setState({\r\n                    ...accountInfo\r\n                })\r\n\r\n                setLoading(false)\r\n\r\n            } catch (error) {\r\n                setError(true)\r\n            }\r\n        }\r\n        fetchProfile()\r\n    }, [sessionId])\r\n    return {state, loading, error}\r\n}","import {useEffect, useState} from \"react\";\r\n\r\nimport API from \"../API\";\r\n\r\nexport const useMovieRatingFetch = (accountId, sessionId) => {\r\n\r\n    const [state, setState] = useState({})\r\n    const [error, setError] = useState(false)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchRating = async () => {\r\n            try {\r\n                setError(false)\r\n                setLoading(true)\r\n\r\n                const movieRatingsInfo = await API.getRateOfMovies(accountId, sessionId)\r\n\r\n                setState({\r\n                    ...movieRatingsInfo\r\n                })\r\n\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setError(true)\r\n            }\r\n        }\r\n        fetchRating()\r\n    }, [accountId, sessionId])\r\n\r\n    return {state, loading, error}\r\n}","import React, {useContext} from 'react';\r\n\r\n//Routing\r\nimport {BrowserRouter, Redirect, Route, Routes} from \"react-router-dom\";\r\n\r\n// Styles\r\nimport {GlobalStyle} from \"./GlobalStyle\";\r\n\r\n// Components\r\nimport Home from './components/Pages/Home'\r\nimport Header from \"./components/Header/Header\";\r\nimport Movie from \"./components/Pages/Movie\";\r\nimport NotFound from \"./components/Pages/NotFound\";\r\nimport Login from \"./components/Pages/Login\";\r\nimport ActorPage from \"./components/Pages/ActorPage\";\r\nimport Profile from \"./components/Pages/Profile\";\r\n\r\n// Context\r\nimport UserProvider from \"./context\";\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <UserProvider>\r\n                <Header />\r\n                <Routes>\r\n                    <Route path='/' element={<Home />} />\r\n                    <Route path='/login' element={<Login />} />\r\n                    <Route path='/:movieId' element={<Movie /> } />\r\n                    <Route path='/profile' element={<Profile /> } />\r\n                    <Route path='/*' element={<NotFound />} />\r\n                    <Route path='/actor/:actorId' element={<ActorPage />} />\r\n                </Routes>\r\n                <GlobalStyle />\r\n            </UserProvider>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}